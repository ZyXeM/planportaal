<?php
/**
 * CheckoutInfo
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * REST API introduction
 *
 * ### URL for API requests  `https://api.paazl.com/`  ### Optional keys  Some of the optional key-value pairs have a default value. Where this is the case, the default values will be indicated.  You can leave out optional keys from requests. If you leave out an optional key, it will not be included in the response concerned.  ### Paazl authentication  Paazl uses a three-legged OAuth 2.0 authentication process in which the API Secret (private key) is only known to the webshop. Webshop customers never have access to that key. However, they do have access the API Key (public key). See the online help article titled \"Authentication & Authorization\" for an explanation of how to generate these keys in the Paazl web app.  In Swagger, you authorize a call using the Authorize button. After clicking this button, you enter a string with either the format \"Bearer api_key\" or the format \"Bearer api_key:api_secret\" depending on the endpoint method concerned.  #### Calls requiring \"Bearer api_key\":  &#8226; POST shippingOptions  &#8226; POST pickupLocations  &#8226; POST checkout  Example:`\"Bearer sI3flYhflh\"`   #### Calls requiring \"Bearer api_key:api_secret\":  &#8226; POST token  &#8226; GET checkout  &#8226; POST order  &#8226; PUT order  &#8226; PATCH order  &#8226; DELETE order  Example:`\"Bearer sI3flYhflh:sdHlHkyunLKsoI94luilIlndD\"`
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CheckoutInfo Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CheckoutInfo implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CheckoutInfo';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'consignee_country_code' => 'string',
        'consignee_postal_code' => 'string',
        'delivery_type' => 'string',
        'notification_email_address' => 'string',
        'notification_phone_number' => 'string',
        'pickup_date' => '\DateTime',
        'pickup_location' => '\OpenAPI\Client\Model\SelectedPickupLocation',
        'preferred_delivery_date' => '\DateTime',
        'reference' => 'string',
        'shipping_option' => '\OpenAPI\Client\Model\SelectedShippingOption',
        'token' => 'string',
        'webshop_id' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'consignee_country_code' => null,
        'consignee_postal_code' => null,
        'delivery_type' => null,
        'notification_email_address' => null,
        'notification_phone_number' => null,
        'pickup_date' => 'date',
        'pickup_location' => null,
        'preferred_delivery_date' => 'date',
        'reference' => null,
        'shipping_option' => null,
        'token' => 'uuid',
        'webshop_id' => 'int64'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'consignee_country_code' => 'consigneeCountryCode',
        'consignee_postal_code' => 'consigneePostalCode',
        'delivery_type' => 'deliveryType',
        'notification_email_address' => 'notificationEmailAddress',
        'notification_phone_number' => 'notificationPhoneNumber',
        'pickup_date' => 'pickupDate',
        'pickup_location' => 'pickupLocation',
        'preferred_delivery_date' => 'preferredDeliveryDate',
        'reference' => 'reference',
        'shipping_option' => 'shippingOption',
        'token' => 'token',
        'webshop_id' => 'webshopId'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'consignee_country_code' => 'setConsigneeCountryCode',
        'consignee_postal_code' => 'setConsigneePostalCode',
        'delivery_type' => 'setDeliveryType',
        'notification_email_address' => 'setNotificationEmailAddress',
        'notification_phone_number' => 'setNotificationPhoneNumber',
        'pickup_date' => 'setPickupDate',
        'pickup_location' => 'setPickupLocation',
        'preferred_delivery_date' => 'setPreferredDeliveryDate',
        'reference' => 'setReference',
        'shipping_option' => 'setShippingOption',
        'token' => 'setToken',
        'webshop_id' => 'setWebshopId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'consignee_country_code' => 'getConsigneeCountryCode',
        'consignee_postal_code' => 'getConsigneePostalCode',
        'delivery_type' => 'getDeliveryType',
        'notification_email_address' => 'getNotificationEmailAddress',
        'notification_phone_number' => 'getNotificationPhoneNumber',
        'pickup_date' => 'getPickupDate',
        'pickup_location' => 'getPickupLocation',
        'preferred_delivery_date' => 'getPreferredDeliveryDate',
        'reference' => 'getReference',
        'shipping_option' => 'getShippingOption',
        'token' => 'getToken',
        'webshop_id' => 'getWebshopId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    const DELIVERY_TYPE_PICKUP_LOCATION = 'PICKUP_LOCATION';
    const DELIVERY_TYPE_HOME = 'HOME';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getDeliveryTypeAllowableValues()
    {
        return [
            self::DELIVERY_TYPE_PICKUP_LOCATION,
            self::DELIVERY_TYPE_HOME,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['consignee_country_code'] = isset($data['consignee_country_code']) ? $data['consignee_country_code'] : null;
        $this->container['consignee_postal_code'] = isset($data['consignee_postal_code']) ? $data['consignee_postal_code'] : null;
        $this->container['delivery_type'] = isset($data['delivery_type']) ? $data['delivery_type'] : null;
        $this->container['notification_email_address'] = isset($data['notification_email_address']) ? $data['notification_email_address'] : null;
        $this->container['notification_phone_number'] = isset($data['notification_phone_number']) ? $data['notification_phone_number'] : null;
        $this->container['pickup_date'] = isset($data['pickup_date']) ? $data['pickup_date'] : null;
        $this->container['pickup_location'] = isset($data['pickup_location']) ? $data['pickup_location'] : null;
        $this->container['preferred_delivery_date'] = isset($data['preferred_delivery_date']) ? $data['preferred_delivery_date'] : null;
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['shipping_option'] = isset($data['shipping_option']) ? $data['shipping_option'] : null;
        $this->container['token'] = isset($data['token']) ? $data['token'] : null;
        $this->container['webshop_id'] = isset($data['webshop_id']) ? $data['webshop_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getDeliveryTypeAllowableValues();
        if (!is_null($this->container['delivery_type']) && !in_array($this->container['delivery_type'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'delivery_type', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets consignee_country_code
     *
     * @return string|null
     */
    public function getConsigneeCountryCode()
    {
        return $this->container['consignee_country_code'];
    }

    /**
     * Sets consignee_country_code
     *
     * @param string|null $consignee_country_code The [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) code for the country the shipment is being sent to.
     *
     * @return $this
     */
    public function setConsigneeCountryCode($consignee_country_code)
    {
        $this->container['consignee_country_code'] = $consignee_country_code;

        return $this;
    }

    /**
     * Gets consignee_postal_code
     *
     * @return string|null
     */
    public function getConsigneePostalCode()
    {
        return $this->container['consignee_postal_code'];
    }

    /**
     * Sets consignee_postal_code
     *
     * @param string|null $consignee_postal_code The postal code of the address the shipment is being sent to. The code is used to get a more precise list of available shipping options.
     *
     * @return $this
     */
    public function setConsigneePostalCode($consignee_postal_code)
    {
        $this->container['consignee_postal_code'] = $consignee_postal_code;

        return $this;
    }

    /**
     * Gets delivery_type
     *
     * @return string|null
     */
    public function getDeliveryType()
    {
        return $this->container['delivery_type'];
    }

    /**
     * Sets delivery_type
     *
     * @param string|null $delivery_type A code used to filter the returned shipping option for display.
     *
     * @return $this
     */
    public function setDeliveryType($delivery_type)
    {
        $allowedValues = $this->getDeliveryTypeAllowableValues();
        if (!is_null($delivery_type) && !in_array($delivery_type, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'delivery_type', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['delivery_type'] = $delivery_type;

        return $this;
    }

    /**
     * Gets notification_email_address
     *
     * @return string|null
     */
    public function getNotificationEmailAddress()
    {
        return $this->container['notification_email_address'];
    }

    /**
     * Sets notification_email_address
     *
     * @param string|null $notification_email_address The email address that track-and-trace status updates have to be sent to.
     *
     * @return $this
     */
    public function setNotificationEmailAddress($notification_email_address)
    {
        $this->container['notification_email_address'] = $notification_email_address;

        return $this;
    }

    /**
     * Gets notification_phone_number
     *
     * @return string|null
     */
    public function getNotificationPhoneNumber()
    {
        return $this->container['notification_phone_number'];
    }

    /**
     * Sets notification_phone_number
     *
     * @param string|null $notification_phone_number The SMS number that track-and-trace status updates have to be sent to.
     *
     * @return $this
     */
    public function setNotificationPhoneNumber($notification_phone_number)
    {
        $this->container['notification_phone_number'] = $notification_phone_number;

        return $this;
    }

    /**
     * Gets pickup_date
     *
     * @return \DateTime|null
     */
    public function getPickupDate()
    {
        return $this->container['pickup_date'];
    }

    /**
     * Sets pickup_date
     *
     * @param \DateTime|null $pickup_date The date on which a shipment has to be picked up from a warehouse by a carrier in order to meet the preferred delivery date.
     *
     * @return $this
     */
    public function setPickupDate($pickup_date)
    {
        $this->container['pickup_date'] = $pickup_date;

        return $this;
    }

    /**
     * Gets pickup_location
     *
     * @return \OpenAPI\Client\Model\SelectedPickupLocation|null
     */
    public function getPickupLocation()
    {
        return $this->container['pickup_location'];
    }

    /**
     * Sets pickup_location
     *
     * @param \OpenAPI\Client\Model\SelectedPickupLocation|null $pickup_location pickup_location
     *
     * @return $this
     */
    public function setPickupLocation($pickup_location)
    {
        $this->container['pickup_location'] = $pickup_location;

        return $this;
    }

    /**
     * Gets preferred_delivery_date
     *
     * @return \DateTime|null
     */
    public function getPreferredDeliveryDate()
    {
        return $this->container['preferred_delivery_date'];
    }

    /**
     * Sets preferred_delivery_date
     *
     * @param \DateTime|null $preferred_delivery_date The day of the week on which customers want their order delivered.
     *
     * @return $this
     */
    public function setPreferredDeliveryDate($preferred_delivery_date)
    {
        $this->container['preferred_delivery_date'] = $preferred_delivery_date;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string|null
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string|null $reference Your reference for the checkout session whose details you have retrieved.
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets shipping_option
     *
     * @return \OpenAPI\Client\Model\SelectedShippingOption|null
     */
    public function getShippingOption()
    {
        return $this->container['shipping_option'];
    }

    /**
     * Sets shipping_option
     *
     * @param \OpenAPI\Client\Model\SelectedShippingOption|null $shipping_option shipping_option
     *
     * @return $this
     */
    public function setShippingOption($shipping_option)
    {
        $this->container['shipping_option'] = $shipping_option;

        return $this;
    }

    /**
     * Gets token
     *
     * @return string|null
     */
    public function getToken()
    {
        return $this->container['token'];
    }

    /**
     * Sets token
     *
     * @param string|null $token The access token returned by the `token` endpoint.
     *
     * @return $this
     */
    public function setToken($token)
    {
        $this->container['token'] = $token;

        return $this;
    }

    /**
     * Gets webshop_id
     *
     * @return int|null
     */
    public function getWebshopId()
    {
        return $this->container['webshop_id'];
    }

    /**
     * Sets webshop_id
     *
     * @param int|null $webshop_id Paazl's internal code for your webshop. You will find this in your Paazl web app account under *Settings>Account>My account>Webshop ID*.
     *
     * @return $this
     */
    public function setWebshopId($webshop_id)
    {
        $this->container['webshop_id'] = $webshop_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


